#include <algorithm>
#include <cassert>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <queue>
#include <random>
#include <set>
#include <sstream>
#include <string>
#include <utility>
#include <vector>

#define REP(i,s,n) for(int i=(int)(s);i<(int)(n);i++)

using namespace std;
typedef long long int ll;
typedef vector<int> VI;
typedef vector<ll> VL;
typedef pair<int, int> PI;
const ll mod = 1e9 + 7;

const int B = 10000000;

#if 0
// precomp
void generate_table(ll mod, string label) {
  ll a = 0;
  ll b = 1;
  ll lim = (1LL << 31) - 1;
  cout << "ll " << label << "[" << (lim / B + 1) * 2 << "]= {" << endl;
  for (ll i = 0; i <= lim; ++i) {
    if (i % B == 0) {
      cout << a << ", " << b << "," << endl;
    }
    ll c = a * a + b * b;
    c %= mod;
    a = b;
    b = c;
  }
  cout << "};" << endl;
}

int main(void) {
  generate_table(mod, "tbl_large");
  generate_table(1999, "tbl_1999");
}

#else

ll tbl_large[430]= {
0, 1,
273024722, 4311556,
735416536, 985013995,
891606433, 883491444,
366590796, 715226125,
764933660, 486570232,
549426113, 247171854,
314009180, 255866164,
795457211, 430492834,
664674740, 574745821,
205006548, 506787455,
492455245, 367181716,
589446215, 302321615,
260155974, 714700836,
262576361, 457018130,
125358142, 911359421,
891024209, 424075349,
773775745, 923156061,
376189776, 205903164,
255070881, 621953232,
949189369, 603006063,
657372730, 574658307,
670515219, 379893913,
401649562, 821809613,
661531915, 421117199,
90375641, 794277929,
897450946, 568075349,
337991205, 859730392,
771181580, 897922977,
552926357, 936538069,
510800382, 447915747,
483160125, 689064163,
669462600, 614500712,
996038106, 651805552,
312589585, 417123866,
153418630, 899131347,
303034641, 767314751,
895650396, 700767388,
41472724, 935173123,
19535491, 887147403,
339544590, 914492163,
649148609, 825233535,
282422232, 46991697,
53794652, 493618376,
709791254, 457651179,
428232473, 42503237,
459959148, 455013539,
942462633, 634876820,
111536249, 906910207,
457645178, 793459948,
14509583, 558866357,
133222827, 862514243,
524407422, 15857391,
323156669, 733669497,
930074032, 229044964,
638030030, 983794786,
886919437, 832980526,
495859025, 612849750,
600090510, 701103562,
716584935, 893813687,
83851447, 188900498,
420262401, 453400745,
524509610, 212821128,
825210680, 211590772,
132530702, 309635593,
279355401, 35405396,
701684898, 637033161,
622753469, 601448804,
399039222, 112834022,
984276245, 148675110,
508850300, 972991480,
426459928, 982476267,
785882395, 854106959,
96377252, 552843012,
576589222, 977192078,
948271120, 434093534,
618012199, 701362725,
693141818, 651554600,
430539113, 165743530,
884994852, 240889380,
943765097, 782892542,
641666767, 536272532,
379041527, 660854512,
468246645, 865340409,
631621822, 324456129,
27206396, 891177137,
54806317, 459947730,
111454271, 819927430,
961463719, 404178883,
474373568, 145740190,
778112451, 149742716,
82742054, 182166122,
75604496, 715555229,
379526781, 560228624,
241911808, 272535621,
756885047, 309398267,
302713626, 298601904,
698737055, 273269680,
445689933, 193219809,
72348114, 129099024,
70760738, 677419501,
57355207, 143474189,
18257109, 668238818,
548430669, 873362352,
424550866, 781489017,
983685271, 438828038,
46872294, 529439830,
879372171, 889901832,
296145824, 45348768,
330282194, 899679293,
184548203, 777997618,
468581984, 225866916,
371464501, 513471154,
597836708, 785922056,
913796906, 349117885,
875914123, 296389683,
578602783, 486227053,
358088632, 974982042,
55988012, 923751293,
385283281, 651304569,
982390458, 338465907,
195327011, 843849563,
67522709, 608415987,
701711556, 441077245,
528351171, 760798734,
507993864, 770125429,
316592194, 905107912,
270343777, 383249843,
112088445, 140284211,
845446998, 675932949,
587649587, 689215985,
986576079, 434521425,
824121179, 284411429,
835345312, 243927189,
997547467, 526069137,
664053004, 175635034,
593696954, 909227888,
445635449, 158827769,
3625896, 752689314,
118654550, 495580589,
19820395, 180617254,
528695115, 246698618,
633414674, 916690844,
836507980, 328851821,
825750934, 644877646,
500305865, 622215597,
10567243, 76341016,
334935873, 631109454,
604576933, 362069594,
173398240, 213909392,
267534008, 31893191,
254134190, 554062956,
214786327, 417669440,
8635641, 257167087,
293477646, 343982969,
858419567, 644647898,
741292955, 769232064,
76876221, 519025062,
534280789, 859010502,
114929254, 465304691,
517514949, 866302961,
9443661, 111450849,
169509799, 692309249,
824512752, 58607560,
381505794, 421167817,
350313047, 852937836,
386339346, 334336852,
286958614, 946168260,
199888398, 38205856,
75836970, 605054029,
487618651, 515563152,
768067181, 296124960,
648310521, 202340352,
388337239, 253820835,
52380451, 574593501,
953989415, 717679983,
491772253, 365682960,
35755843, 593714271,
128339863, 876902551,
391495182, 189684527,
317466925, 21735289,
265055946, 412767319,
918574015, 375425822,
41300027, 268855084,
835817239, 55004267,
301281092, 919739281,
729671190, 711564458,
22583984, 379321041,
862812908, 98096274,
327873216, 535635595,
803949450, 400445536,
443463861, 977327959,
854603791, 63456551,
745050546, 183895177,
148035219, 621722318,
34102463, 46729090,
940260767, 952815489,
903964193, 944929623,
961302287, 289657835,
342954178, 851562305,
413641097, 633484105,
435615125, 47574488,
392373781, 757918698,
491102416, 651219912,
830787773, 34331628,
658195516, 914407321,
353372684, 603455218,
579158351, 866878558,
525475986, 309125259,
447960680, 525587195,
258696416, 852984322,
741514544, 145396458,
958624056, 510776377,
744199081, 33855946,
924650633, 337382675,
};
ll tbl_1999[430]= {
0, 1,
1917, 1622,
1039, 881,
973, 43,
1748, 1530,
1678, 1545,
1619, 1561,
1482, 63,
893, 1112,
1816, 185,
1917, 1622,
1039, 881,
973, 43,
1748, 1530,
1678, 1545,
1619, 1561,
1482, 63,
893, 1112,
1816, 185,
1917, 1622,
1039, 881,
973, 43,
1748, 1530,
1678, 1545,
1619, 1561,
1482, 63,
893, 1112,
1816, 185,
1917, 1622,
1039, 881,
973, 43,
1748, 1530,
1678, 1545,
1619, 1561,
1482, 63,
893, 1112,
1816, 185,
1917, 1622,
1039, 881,
973, 43,
1748, 1530,
1678, 1545,
1619, 1561,
1482, 63,
893, 1112,
1816, 185,
1917, 1622,
1039, 881,
973, 43,
1748, 1530,
1678, 1545,
1619, 1561,
1482, 63,
893, 1112,
1816, 185,
1917, 1622,
1039, 881,
973, 43,
1748, 1530,
1678, 1545,
1619, 1561,
1482, 63,
893, 1112,
1816, 185,
1917, 1622,
1039, 881,
973, 43,
1748, 1530,
1678, 1545,
1619, 1561,
1482, 63,
893, 1112,
1816, 185,
1917, 1622,
1039, 881,
973, 43,
1748, 1530,
1678, 1545,
1619, 1561,
1482, 63,
893, 1112,
1816, 185,
1917, 1622,
1039, 881,
973, 43,
1748, 1530,
1678, 1545,
1619, 1561,
1482, 63,
893, 1112,
1816, 185,
1917, 1622,
1039, 881,
973, 43,
1748, 1530,
1678, 1545,
1619, 1561,
1482, 63,
893, 1112,
1816, 185,
1917, 1622,
1039, 881,
973, 43,
1748, 1530,
1678, 1545,
1619, 1561,
1482, 63,
893, 1112,
1816, 185,
1917, 1622,
1039, 881,
973, 43,
1748, 1530,
1678, 1545,
1619, 1561,
1482, 63,
893, 1112,
1816, 185,
1917, 1622,
1039, 881,
973, 43,
1748, 1530,
1678, 1545,
1619, 1561,
1482, 63,
893, 1112,
1816, 185,
1917, 1622,
1039, 881,
973, 43,
1748, 1530,
1678, 1545,
1619, 1561,
1482, 63,
893, 1112,
1816, 185,
1917, 1622,
1039, 881,
973, 43,
1748, 1530,
1678, 1545,
1619, 1561,
1482, 63,
893, 1112,
1816, 185,
1917, 1622,
1039, 881,
973, 43,
1748, 1530,
1678, 1545,
1619, 1561,
1482, 63,
893, 1112,
1816, 185,
1917, 1622,
1039, 881,
973, 43,
1748, 1530,
1678, 1545,
1619, 1561,
1482, 63,
893, 1112,
1816, 185,
1917, 1622,
1039, 881,
973, 43,
1748, 1530,
1678, 1545,
1619, 1561,
1482, 63,
893, 1112,
1816, 185,
1917, 1622,
1039, 881,
973, 43,
1748, 1530,
1678, 1545,
1619, 1561,
1482, 63,
893, 1112,
1816, 185,
1917, 1622,
1039, 881,
973, 43,
1748, 1530,
1678, 1545,
1619, 1561,
1482, 63,
893, 1112,
1816, 185,
1917, 1622,
1039, 881,
973, 43,
1748, 1530,
1678, 1545,
1619, 1561,
1482, 63,
893, 1112,
1816, 185,
1917, 1622,
1039, 881,
973, 43,
1748, 1530,
1678, 1545,
1619, 1561,
1482, 63,
893, 1112,
1816, 185,
1917, 1622,
1039, 881,
973, 43,
1748, 1530,
1678, 1545,
1619, 1561,
1482, 63,
};

ll calc(ll n, ll* tbl, ll mod) {
  int idx = n / B;
  ll a = tbl[2 * idx];
  ll b = tbl[2 * idx + 1];
  for (ll i = B * idx; i < n; ++i) {
    ll c = a * a + b * b;
    c %= mod;
    a = b;
    b = c;
  }
  return a;
}


int main(void) {
  ll n, m;
  cin >> n >> m;
  ll *tbl;
  if (m == mod) {
    tbl = tbl_large;
  } else {
    tbl = tbl_1999;
  }
  cout << calc(n - 1, tbl, m) << endl;
}

#endif

